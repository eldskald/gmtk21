[gd_scene load_steps=12 format=2]

[ext_resource path="res://actors/BaseLevel/BaseLevel.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/textures/block-par-0.png" type="Texture" id=2]
[ext_resource path="res://assets/textures/block-par-1.png" type="Texture" id=3]
[ext_resource path="res://assets/font/Retroscape.ttf" type="DynamicFontData" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 camera_position = vec2(0.0);
uniform vec2 par1_vel = vec2(25.0, 2.0);
uniform vec2 par2_vel = vec2(10.0, -5.0);
uniform vec4 bg_color: hint_color;
uniform vec4 bd1_color: hint_color;
uniform vec4 bd2_color: hint_color;
uniform sampler2D parallax_texture_1: hint_black;
uniform sampler2D parallax_texture_2: hint_black;
uniform sampler2D border_noise_texture: hint_black;

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 pix_coord = floor(SCREEN_UV / SCREEN_PIXEL_SIZE);
	float noise = texture(border_noise_texture, SCREEN_UV + TIME * vec2(0.02)).x;
	
	if (length(color - bd1_color) < 0.001) {
		color = noise >= 0.51 ? vec4(0.0) : bd1_color;
	}
	
	if (length(color - bd2_color) < 0.001) {
		color = noise >= 0.49 ? bd1_color : bg_color;
	}
	
	if (length(color - bg_color) < 0.001) {
		color = texture(parallax_texture_1, mod(pix_coord + par1_vel * TIME + camera_position / 2.0, vec2(32.0)) / vec2(32.0));
		if (color.a == 0.0) {
			color = texture(parallax_texture_2, mod(pix_coord + par2_vel * TIME, vec2(32.0)) / vec2(32.0));
		}
		if (color.a == 0.0) {
			color = bg_color;
		}

	}
	
	COLOR = color;
}
"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/camera_position = Vector2( 0, 0 )
shader_param/par1_vel = Vector2( 25, 2 )
shader_param/par2_vel = Vector2( 10, -5 )
shader_param/bg_color = Color( 0.266667, 0.0392157, 0.403922, 1 )
shader_param/bd1_color = Color( 0.839216, 0.878431, 0.941176, 1 )
shader_param/bd2_color = Color( 0.705882, 0.682353, 0.909804, 1 )
shader_param/parallax_texture_1 = ExtResource( 2 )
shader_param/parallax_texture_2 = ExtResource( 3 )
shader_param/border_noise_texture = SubResource( 3 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec4 color: hint_color;

void fragment() {
	vec2 radial = UV - vec2(0.5);
	vec4 col = vec4(0.0);
	if (length(radial) < 0.3) {
		col = color;
	}
	else {
		vec2 unit = normalize(radial);
		float offset = clamp(length(radial) - 0.3, 0.0, 0.2) * 5.0;
		col = texture(SCREEN_TEXTURE, SCREEN_UV - 0.05 * sin(offset * 3.14 * 2.0 + TIME) * unit * (1.0 - offset));
	}
	COLOR = col;
}


"

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/color = Color( 1, 1, 1, 1 )

[sub_resource type="DynamicFont" id=7]
size = 14
font_data = ExtResource( 4 )

[node name="BaseLevel" instance=ExtResource( 1 )]

[node name="SolidBlock" parent="." index="0"]
material = SubResource( 4 )
tile_data = PoolIntArray( -65538, 0, 196608, -65537, 0, 196609, -131072, 0, 196609, -131071, 0, 196609, -131070, 0, 196609, -131069, 0, 196609, -131068, 0, 196609, -131067, 0, 196609, -131066, 0, 196609, -131065, 0, 196609, -131064, 0, 196609, -131063, 0, 196609, -131062, 0, 196609, -131061, 0, 196609, -131060, 0, 196609, -131059, 0, 196609, -131058, 0, 196609, -131057, 0, 196609, -131056, 0, 196609, -131055, 0, 196609, -131054, 0, 196609, -131053, 0, 196609, -131052, 0, 196609, -131051, 0, 196609, -131050, 0, 196609, -131049, 0, 196609, -131048, 0, 196609, -131047, 0, 196609, -131046, 0, 196609, -131045, 0, 196609, -131044, 0, 196609, -131043, 0, 196609, -131042, 0, 196609, -131041, 0, 196609, -131040, 0, 196609, -131039, 0, 196610, -2, 0, 262144, -1, 0, 262145, -65536, 0, 262145, -65535, 0, 262145, -65534, 0, 262145, -65533, 0, 262145, -65532, 0, 262145, -65531, 0, 262145, -65530, 0, 262145, -65529, 0, 262145, -65528, 0, 262145, -65527, 0, 262145, -65526, 0, 262145, -65525, 0, 262145, -65524, 0, 262145, -65523, 0, 262145, -65522, 0, 262145, -65521, 0, 262145, -65520, 0, 262145, -65519, 0, 262145, -65518, 0, 262145, -65517, 0, 262145, -65516, 0, 262145, -65515, 0, 262145, -65514, 0, 262145, -65513, 0, 262145, -65512, 0, 262145, -65511, 0, 262145, -65510, 0, 262145, -65509, 0, 262145, -65508, 0, 262145, -65507, 0, 262145, -65506, 0, 262145, -65505, 0, 262145, -65504, 0, 262145, -65503, 0, 262146, 65534, 0, 262144, 65535, 0, 262145, 0, 0, 262145, 1, 0, 262145, 2, 0, 262145, 3, 0, 262145, 4, 0, 262145, 5, 0, 262145, 6, 0, 262145, 7, 0, 262145, 8, 0, 262145, 9, 0, 262145, 10, 0, 262145, 11, 0, 262145, 12, 0, 262145, 13, 0, 262145, 14, 0, 262145, 15, 0, 262145, 16, 0, 262145, 17, 0, 262145, 18, 0, 262145, 19, 0, 262145, 20, 0, 262145, 21, 0, 262145, 22, 0, 262145, 23, 0, 262145, 24, 0, 262145, 25, 0, 262145, 26, 0, 262145, 27, 0, 262145, 28, 0, 262145, 29, 0, 262145, 30, 0, 262145, 31, 0, 262145, 32, 0, 262145, 33, 0, 262146, 131070, 0, 262144, 131071, 0, 262145, 65536, 0, 262145, 65537, 0, 262145, 65538, 0, 262145, 65539, 0, 262145, 65540, 0, 262145, 65541, 0, 262145, 65542, 0, 262145, 65543, 0, 262145, 65544, 0, 262145, 65545, 0, 262145, 65546, 0, 262145, 65547, 0, 262145, 65548, 0, 262145, 65549, 0, 262145, 65550, 0, 262145, 65551, 0, 262145, 65552, 0, 262145, 65553, 0, 262145, 65554, 0, 262145, 65555, 0, 262145, 65556, 0, 262145, 65557, 0, 262145, 65558, 0, 262145, 65559, 0, 262145, 65560, 0, 262145, 65561, 0, 262145, 65562, 0, 262145, 65563, 0, 262145, 65564, 0, 262145, 65565, 0, 262145, 65566, 0, 262145, 65567, 0, 262145, 65568, 0, 262145, 65569, 0, 720898, 65570, 0, 393216, 65571, 0, 65538, 196606, 0, 262144, 196607, 0, 262145, 131072, 0, 262145, 131073, 0, 262145, 131074, 0, 262145, 131075, 0, 262145, 131076, 0, 262145, 131077, 0, 262145, 131078, 0, 262145, 131079, 0, 262145, 131080, 0, 262145, 131081, 0, 262145, 131082, 0, 262145, 131083, 0, 262145, 131084, 0, 262145, 131085, 0, 262145, 131086, 0, 262145, 131087, 0, 262145, 131088, 0, 262145, 131089, 0, 262145, 131090, 0, 262145, 131091, 0, 262145, 131092, 0, 655362, 131093, 0, 327681, 131094, 0, 327681, 131095, 0, 327681, 131096, 0, 327681, 131097, 0, 327681, 131098, 0, 327681, 131099, 0, 327681, 131100, 0, 327681, 131101, 0, 327681, 131102, 0, 655363, 131103, 0, 262145, 131104, 0, 262145, 131105, 0, 655362, 131106, 0, 327682, 262142, 0, 262144, 262143, 0, 262145, 196608, 0, 655362, 196609, 0, 327681, 196610, 0, 327681, 196611, 0, 327681, 196612, 0, 327681, 196613, 0, 327681, 196614, 0, 327681, 196615, 0, 327681, 196616, 0, 327681, 196617, 0, 327681, 196618, 0, 327681, 196619, 0, 655363, 196620, 0, 262145, 196621, 0, 262145, 196622, 0, 262145, 196623, 0, 262145, 196624, 0, 262145, 196625, 0, 262145, 196626, 0, 262145, 196627, 0, 262145, 196628, 0, 262146, 196638, 0, 327680, 196639, 0, 655363, 196640, 0, 262145, 196641, 0, 262146, 327678, 0, 262144, 327679, 0, 262145, 262144, 0, 262146, 262155, 0, 327680, 262156, 0, 327681, 262157, 0, 327681, 262158, 0, 327681, 262159, 0, 327681, 262160, 0, 327681, 262161, 0, 327681, 262162, 0, 327681, 262163, 0, 327681, 262164, 0, 393219, 262175, 0, 262144, 262176, 0, 262145, 262177, 0, 262146, 393214, 0, 262144, 393215, 0, 262145, 327680, 0, 262146, 327700, 0, 65539, 327711, 0, 262144, 327712, 0, 262145, 327713, 0, 262146, 458750, 0, 262144, 458751, 0, 262145, 393216, 0, 262146, 393236, 0, 65539, 393247, 0, 262144, 393248, 0, 262145, 393249, 0, 262146, 524286, 0, 262144, 524287, 0, 262145, 458752, 0, 262146, 458772, 0, 65539, 458783, 0, 262144, 458784, 0, 262145, 458785, 0, 262146, 589822, 0, 262144, 589823, 0, 262145, 524288, 0, 262146, 524308, 0, 131073, 524319, 0, 262144, 524320, 0, 262145, 524321, 0, 262146, 655358, 0, 262144, 655359, 0, 262145, 589824, 0, 262146, 589855, 0, 262144, 589856, 0, 262145, 589857, 0, 262146, 720894, 0, 262144, 720895, 0, 262145, 655360, 0, 262146, 655391, 0, 262144, 655392, 0, 262145, 655393, 0, 262146, 786430, 0, 262144, 786431, 0, 262145, 720896, 0, 262146, 720909, 0, 196608, 720910, 0, 196609, 720911, 0, 196609, 720912, 0, 196609, 720913, 0, 196610, 720927, 0, 262144, 720928, 0, 262145, 720929, 0, 262146, 851966, 0, 262144, 851967, 0, 262145, 786432, 0, 262146, 786445, 0, 262144, 786446, 0, 262145, 786447, 0, 262145, 786448, 0, 262145, 786449, 0, 262146, 786463, 0, 262144, 786464, 0, 262145, 786465, 0, 262146, 917502, 0, 262144, 917503, 0, 262145, 851968, 0, 262146, 851978, 0, 196608, 851979, 0, 196609, 851980, 0, 196609, 851981, 0, 720899, 851982, 0, 262145, 851983, 0, 262145, 851984, 0, 262145, 851985, 0, 262146, 851999, 0, 262144, 852000, 0, 262145, 852001, 0, 262146, 983038, 0, 262144, 983039, 0, 262145, 917504, 0, 262146, 917514, 0, 262144, 917515, 0, 262145, 917516, 0, 262145, 917517, 0, 262145, 917518, 0, 262145, 917519, 0, 262145, 917520, 0, 262145, 917521, 0, 262146, 917534, 0, 196608, 917535, 0, 720899, 917536, 0, 262145, 917537, 0, 262146, 1048574, 0, 262144, 1048575, 0, 262145, 983040, 0, 720898, 983041, 0, 196609, 983042, 0, 196609, 983043, 0, 196609, 983044, 0, 196609, 983045, 0, 196609, 983046, 0, 196609, 983047, 0, 196609, 983048, 0, 196609, 983049, 0, 196609, 983050, 0, 720899, 983051, 0, 262145, 983052, 0, 262145, 983053, 0, 262145, 983054, 0, 262145, 983055, 0, 262145, 983056, 0, 262145, 983057, 0, 262146, 983069, 0, 196608, 983070, 0, 720899, 983071, 0, 262145, 983072, 0, 262145, 983073, 0, 262146, 1114110, 0, 262144, 1114111, 0, 262145, 1048576, 0, 262145, 1048577, 0, 262145, 1048578, 0, 262145, 1048579, 0, 262145, 1048580, 0, 262145, 1048581, 0, 262145, 1048582, 0, 262145, 1048583, 0, 262145, 1048584, 0, 262145, 1048585, 0, 262145, 1048586, 0, 262145, 1048587, 0, 262145, 1048588, 0, 262145, 1048589, 0, 262145, 1048590, 0, 262145, 1048591, 0, 262145, 1048592, 0, 262145, 1048593, 0, 720898, 1048594, 0, 196609, 1048595, 0, 196609, 1048596, 0, 196609, 1048597, 0, 196609, 1048598, 0, 196609, 1048599, 0, 196609, 1048600, 0, 196609, 1048601, 0, 196609, 1048602, 0, 196609, 1048603, 0, 196609, 1048604, 0, 196609, 1048605, 0, 720899, 1048606, 0, 262145, 1048607, 0, 262145, 1048608, 0, 262145, 1048609, 0, 720898, 1048610, 0, 196610, 1179646, 0, 262144, 1179647, 0, 262145, 1114112, 0, 262145, 1114113, 0, 262145, 1114114, 0, 262145, 1114115, 0, 262145, 1114116, 0, 262145, 1114117, 0, 262145, 1114118, 0, 262145, 1114119, 0, 262145, 1114120, 0, 262145, 1114121, 0, 262145, 1114122, 0, 262145, 1114123, 0, 262145, 1114124, 0, 262145, 1114125, 0, 262145, 1114126, 0, 262145, 1114127, 0, 262145, 1114128, 0, 262145, 1114129, 0, 262145, 1114130, 0, 262145, 1114131, 0, 262145, 1114132, 0, 262145, 1114133, 0, 262145, 1114134, 0, 262145, 1114135, 0, 262145, 1114136, 0, 262145, 1114137, 0, 262145, 1114138, 0, 262145, 1114139, 0, 262145, 1114140, 0, 262145, 1114141, 0, 262145, 1114142, 0, 262145, 1114143, 0, 262145, 1114144, 0, 262145, 1114145, 0, 262145, 1114146, 0, 262146, 1245182, 0, 262144, 1245183, 0, 262145, 1179648, 0, 262145, 1179649, 0, 262145, 1179650, 0, 262145, 1179651, 0, 262145, 1179652, 0, 262145, 1179653, 0, 262145, 1179654, 0, 262145, 1179655, 0, 262145, 1179656, 0, 262145, 1179657, 0, 262145, 1179658, 0, 262145, 1179659, 0, 262145, 1179660, 0, 262145, 1179661, 0, 262145, 1179662, 0, 262145, 1179663, 0, 262145, 1179664, 0, 262145, 1179665, 0, 655362, 1179666, 0, 327681, 1179667, 0, 327681, 1179668, 0, 327681, 1179669, 0, 327681, 1179670, 0, 327681, 1179671, 0, 327681, 1179672, 0, 327681, 1179673, 0, 327681, 1179674, 0, 327681, 1179675, 0, 327681, 1179676, 0, 327681, 1179677, 0, 327681, 1179678, 0, 327681, 1179679, 0, 327681, 1179680, 0, 327681, 1179681, 0, 327681, 1179682, 0, 327682, 1310718, 0, 327680, 1310719, 0, 327681, 1245184, 0, 327681, 1245185, 0, 327681, 1245186, 0, 327681, 1245187, 0, 327681, 1245188, 0, 327681, 1245189, 0, 327681, 1245190, 0, 327681, 1245191, 0, 327681, 1245192, 0, 327681, 1245193, 0, 327681, 1245194, 0, 327681, 1245195, 0, 327681, 1245196, 0, 327681, 1245197, 0, 655363, 1245198, 0, 262145, 1245199, 0, 262145, 1245200, 0, 262145, 1245201, 0, 262146, 1310733, 0, 327680, 1310734, 0, 327681, 1310735, 0, 327681, 1310736, 0, 327681, 1310737, 0, 327682 )

[node name="Platform" parent="." index="3"]
tile_data = PoolIntArray( 786449, 0, 0, 786450, 0, 1, 786451, 0, 1, 786452, 0, 2, 917521, 0, 0, 917522, 0, 1, 917523, 0, 1, 917524, 0, 1, 917525, 0, 2 )

[node name="Chain" parent="." index="5"]
blue_pos = Vector2( 32, 160 )

[node name="Camera2D" parent="." index="6"]
limit_left = 0
limit_top = 0
limit_right = 512
limit_bottom = 288

[node name="FinishLine" parent="." index="8"]
position = Vector2( 448, 120 )

[node name="Hole" parent="FinishLine" index="1"]
material = SubResource( 6 )

[node name="Label" type="Label" parent="." index="9"]
margin_left = 32.0
margin_top = 16.0
margin_right = 492.0
margin_bottom = 36.0
custom_fonts/font = SubResource( 7 )
text = "HOLD DOWN/R2/L2:  STICK TO SURFACE"
__meta__ = {
"_edit_use_anchors_": false
}

[gd_scene load_steps=11 format=2]

[ext_resource path="res://assets/textures/block-par-0.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/block-par-1.png" type="Texture" id=2]
[ext_resource path="res://actors/BaseLevel/BaseLevel.tscn" type="PackedScene" id=3]
[ext_resource path="res://actors/orb/orb.tscn" type="PackedScene" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 camera_position = vec2(0.0);
uniform vec2 par1_vel = vec2(25.0, 2.0);
uniform vec2 par2_vel = vec2(10.0, -5.0);
uniform vec4 bg_color: hint_color;
uniform vec4 bd1_color: hint_color;
uniform vec4 bd2_color: hint_color;
uniform sampler2D parallax_texture_1: hint_black;
uniform sampler2D parallax_texture_2: hint_black;
uniform sampler2D border_noise_texture: hint_black;

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 pix_coord = floor(SCREEN_UV / SCREEN_PIXEL_SIZE);
	float noise = texture(border_noise_texture, SCREEN_UV + TIME * vec2(0.02)).x;
	
	if (length(color - bd1_color) < 0.001) {
		color = noise >= 0.51 ? vec4(0.0) : bd1_color;
	}
	
	if (length(color - bd2_color) < 0.001) {
		color = noise >= 0.49 ? bd1_color : bg_color;
	}
	
	if (length(color - bg_color) < 0.001) {
		color = texture(parallax_texture_1, mod(pix_coord + par1_vel * TIME + camera_position / 2.0, vec2(32.0)) / vec2(32.0));
		if (color.a == 0.0) {
			color = texture(parallax_texture_2, mod(pix_coord + par2_vel * TIME, vec2(32.0)) / vec2(32.0));
		}
		if (color.a == 0.0) {
			color = bg_color;
		}

	}
	
	COLOR = color;
}
"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/camera_position = Vector2( 0, 0 )
shader_param/par1_vel = Vector2( 25, 2 )
shader_param/par2_vel = Vector2( 10, -5 )
shader_param/bg_color = Color( 0.266667, 0.0392157, 0.403922, 1 )
shader_param/bd1_color = Color( 0.839216, 0.878431, 0.941176, 1 )
shader_param/bd2_color = Color( 0.705882, 0.682353, 0.909804, 1 )
shader_param/parallax_texture_1 = ExtResource( 1 )
shader_param/parallax_texture_2 = ExtResource( 2 )
shader_param/border_noise_texture = SubResource( 3 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec4 color: hint_color;

void fragment() {
	vec2 radial = UV - vec2(0.5);
	vec4 col = vec4(0.0);
	if (length(radial) < 0.3) {
		col = color;
	}
	else {
		vec2 unit = normalize(radial);
		float offset = clamp(length(radial) - 0.3, 0.0, 0.2) * 5.0;
		col = texture(SCREEN_TEXTURE, SCREEN_UV - 0.05 * sin(offset * 3.14 * 2.0 + TIME) * unit * (1.0 - offset));
	}
	COLOR = col;
}


"

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/color = Color( 1, 1, 1, 1 )

[node name="BaseLevel" instance=ExtResource( 3 )]

[node name="SolidBlock" parent="." index="0"]
material = SubResource( 4 )
tile_data = PoolIntArray( -589825, 0, 196608, -655360, 0, 196609, -655359, 0, 196609, -655358, 0, 196609, -655357, 0, 196609, -655356, 0, 196609, -655355, 0, 196609, -655354, 0, 196609, -655353, 0, 196609, -655352, 0, 196609, -655351, 0, 196609, -655350, 0, 196609, -655349, 0, 196609, -655348, 0, 196609, -655347, 0, 196609, -655346, 0, 196609, -655345, 0, 196609, -655344, 0, 196609, -655343, 0, 196609, -655342, 0, 196609, -655341, 0, 196609, -655340, 0, 196609, -655339, 0, 196609, -655338, 0, 196609, -655337, 0, 196609, -655336, 0, 196609, -655335, 0, 196609, -655334, 0, 196609, -655333, 0, 196609, -655332, 0, 196609, -655331, 0, 196609, -655330, 0, 196609, -655329, 0, 196609, -655328, 0, 196609, -655327, 0, 196610, -524289, 0, 262144, -589824, 0, 262145, -589823, 0, 262145, -589822, 0, 262145, -589821, 0, 262145, -589820, 0, 262145, -589819, 0, 262145, -589818, 0, 262145, -589817, 0, 262145, -589816, 0, 262145, -589815, 0, 262145, -589814, 0, 262145, -589813, 0, 262145, -589812, 0, 262145, -589811, 0, 262145, -589810, 0, 262145, -589809, 0, 262145, -589808, 0, 262145, -589807, 0, 262145, -589806, 0, 262145, -589805, 0, 262145, -589804, 0, 262145, -589803, 0, 262145, -589802, 0, 262145, -589801, 0, 262145, -589800, 0, 262145, -589799, 0, 262145, -589798, 0, 262145, -589797, 0, 262145, -589796, 0, 262145, -589795, 0, 262145, -589794, 0, 262145, -589793, 0, 262145, -589792, 0, 262145, -589791, 0, 262146, -458753, 0, 262144, -524288, 0, 262145, -524287, 0, 262145, -524286, 0, 262145, -524285, 0, 262145, -524284, 0, 262145, -524283, 0, 262145, -524282, 0, 262145, -524281, 0, 262145, -524280, 0, 262145, -524279, 0, 262145, -524278, 0, 262145, -524277, 0, 262145, -524276, 0, 262145, -524275, 0, 262145, -524274, 0, 262145, -524273, 0, 262145, -524272, 0, 262145, -524271, 0, 262145, -524270, 0, 262145, -524269, 0, 262145, -524268, 0, 262145, -524267, 0, 262145, -524266, 0, 262145, -524265, 0, 262145, -524264, 0, 262145, -524263, 0, 262145, -524262, 0, 262145, -524261, 0, 262145, -524260, 0, 262145, -524259, 0, 262145, -524258, 0, 262145, -524257, 0, 262145, -524256, 0, 262145, -524255, 0, 262146, -393217, 0, 262144, -458752, 0, 262145, -458751, 0, 262145, -458750, 0, 262145, -458749, 0, 262145, -458748, 0, 262145, -458747, 0, 262145, -458746, 0, 262145, -458745, 0, 655362, -458744, 0, 327681, -458743, 0, 327681, -458742, 0, 327681, -458741, 0, 327681, -458740, 0, 327681, -458739, 0, 327681, -458738, 0, 327681, -458737, 0, 327681, -458736, 0, 327681, -458735, 0, 327681, -458734, 0, 327681, -458733, 0, 327681, -458732, 0, 327681, -458731, 0, 327681, -458730, 0, 327681, -458729, 0, 327681, -458728, 0, 327681, -458727, 0, 327681, -458726, 0, 327681, -458725, 0, 655363, -458724, 0, 262145, -458723, 0, 262145, -458722, 0, 262145, -458721, 0, 262145, -458720, 0, 262145, -458719, 0, 262146, -327681, 0, 262144, -393216, 0, 262145, -393215, 0, 262145, -393214, 0, 655362, -393213, 0, 327681, -393212, 0, 327681, -393211, 0, 327681, -393210, 0, 327681, -393209, 0, 327682, -393189, 0, 327680, -393188, 0, 327681, -393187, 0, 655363, -393186, 0, 262145, -393185, 0, 262145, -393184, 0, 262145, -393183, 0, 262146, -262145, 0, 262144, -327680, 0, 262145, -327679, 0, 262145, -327678, 0, 262146, -327651, 0, 262144, -327650, 0, 262145, -327649, 0, 262145, -327648, 0, 262145, -327647, 0, 262146, -196609, 0, 262144, -262144, 0, 262145, -262143, 0, 262145, -262142, 0, 262146, -262115, 0, 262144, -262114, 0, 262145, -262113, 0, 262145, -262112, 0, 262145, -262111, 0, 262146, -131073, 0, 262144, -196608, 0, 262145, -196607, 0, 262145, -196606, 0, 262146, -196579, 0, 262144, -196578, 0, 262145, -196577, 0, 262145, -196576, 0, 262145, -196575, 0, 262146, -65537, 0, 262144, -131072, 0, 262145, -131071, 0, 262145, -131070, 0, 262146, -131043, 0, 262144, -131042, 0, 262145, -131041, 0, 262145, -131040, 0, 262145, -131039, 0, 262146, -1, 0, 262144, -65536, 0, 262145, -65535, 0, 262145, -65534, 0, 262146, -65507, 0, 262144, -65506, 0, 262145, -65505, 0, 262145, -65504, 0, 262145, -65503, 0, 262146, 65535, 0, 262144, 0, 0, 262145, 1, 0, 655362, 2, 0, 327682, 29, 0, 262144, 30, 0, 262145, 31, 0, 262145, 32, 0, 262145, 33, 0, 262146, 131071, 0, 262144, 65536, 0, 262145, 65537, 0, 262146, 65565, 0, 327680, 65566, 0, 655363, 65567, 0, 262145, 65568, 0, 262145, 65569, 0, 262146, 196607, 0, 262144, 131072, 0, 262145, 131073, 0, 262146, 131102, 0, 262144, 131103, 0, 262145, 131104, 0, 262145, 131105, 0, 262146, 262143, 0, 262144, 196608, 0, 262145, 196609, 0, 262146, 196638, 0, 262144, 196639, 0, 262145, 196640, 0, 262145, 196641, 0, 262146, 327679, 0, 262144, 262144, 0, 262145, 262145, 0, 262146, 262174, 0, 262144, 262175, 0, 262145, 262176, 0, 262145, 262177, 0, 262146, 393215, 0, 262144, 327680, 0, 262145, 327681, 0, 262146, 327710, 0, 262144, 327711, 0, 262145, 327712, 0, 262145, 327713, 0, 262146, 458751, 0, 262144, 393216, 0, 262145, 393217, 0, 262146, 393246, 0, 262144, 393247, 0, 262145, 393248, 0, 262145, 393249, 0, 262146, 524287, 0, 262144, 458752, 0, 262145, 458753, 0, 262146, 458782, 0, 262144, 458783, 0, 262145, 458784, 0, 262145, 458785, 0, 262146, 589823, 0, 262144, 524288, 0, 262145, 524289, 0, 262146, 524318, 0, 262144, 524319, 0, 262145, 524320, 0, 262145, 524321, 0, 262146, 655359, 0, 262144, 589824, 0, 262145, 589825, 0, 720898, 589826, 0, 196610, 589854, 0, 262144, 589855, 0, 262145, 589856, 0, 262145, 589857, 0, 262146, 720895, 0, 262144, 655360, 0, 262145, 655361, 0, 262145, 655362, 0, 262146, 655390, 0, 262144, 655391, 0, 262145, 655392, 0, 262145, 655393, 0, 262146, 786431, 0, 262144, 720896, 0, 262145, 720897, 0, 262145, 720898, 0, 262146, 720926, 0, 262144, 720927, 0, 262145, 720928, 0, 262145, 720929, 0, 262146, 851967, 0, 262144, 786432, 0, 262145, 786433, 0, 262145, 786434, 0, 262146, 786462, 0, 262144, 786463, 0, 262145, 786464, 0, 262145, 786465, 0, 262146, 917503, 0, 262144, 851968, 0, 262145, 851969, 0, 262145, 851970, 0, 720898, 851971, 0, 196609, 851972, 0, 196609, 851973, 0, 196610, 851998, 0, 262144, 851999, 0, 262145, 852000, 0, 262145, 852001, 0, 262146, 983039, 0, 262144, 917504, 0, 262145, 917505, 0, 262145, 917506, 0, 262145, 917507, 0, 262145, 917508, 0, 262145, 917509, 0, 262146, 917532, 0, 196608, 917533, 0, 196609, 917534, 0, 720899, 917535, 0, 262145, 917536, 0, 262145, 917537, 0, 262146, 1048575, 0, 262144, 983040, 0, 262145, 983041, 0, 262145, 983042, 0, 262145, 983043, 0, 262145, 983044, 0, 262145, 983045, 0, 720898, 983046, 0, 196609, 983047, 0, 196609, 983048, 0, 196609, 983049, 0, 196609, 983050, 0, 196609, 983051, 0, 196609, 983052, 0, 196609, 983053, 0, 196609, 983054, 0, 196609, 983055, 0, 196609, 983056, 0, 196609, 983057, 0, 196609, 983058, 0, 196609, 983059, 0, 196609, 983060, 0, 196609, 983061, 0, 196609, 983062, 0, 196609, 983063, 0, 196609, 983064, 0, 196609, 983065, 0, 196609, 983066, 0, 196609, 983067, 0, 196609, 983068, 0, 720899, 983069, 0, 262145, 983070, 0, 262145, 983071, 0, 262145, 983072, 0, 262145, 983073, 0, 262146, 1114111, 0, 262144, 1048576, 0, 262145, 1048577, 0, 262145, 1048578, 0, 262145, 1048579, 0, 262145, 1048580, 0, 262145, 1048581, 0, 262145, 1048582, 0, 262145, 1048583, 0, 262145, 1048584, 0, 262145, 1048585, 0, 262145, 1048586, 0, 262145, 1048587, 0, 262145, 1048588, 0, 262145, 1048589, 0, 262145, 1048590, 0, 262145, 1048591, 0, 262145, 1048592, 0, 262145, 1048593, 0, 262145, 1048594, 0, 262145, 1048595, 0, 262145, 1048596, 0, 262145, 1048597, 0, 262145, 1048598, 0, 262145, 1048599, 0, 262145, 1048600, 0, 262145, 1048601, 0, 262145, 1048602, 0, 262145, 1048603, 0, 262145, 1048604, 0, 262145, 1048605, 0, 262145, 1048606, 0, 262145, 1048607, 0, 262145, 1048608, 0, 262145, 1048609, 0, 262146, 1179647, 0, 262144, 1114112, 0, 262145, 1114113, 0, 262145, 1114114, 0, 262145, 1114115, 0, 262145, 1114116, 0, 262145, 1114117, 0, 262145, 1114118, 0, 262145, 1114119, 0, 262145, 1114120, 0, 262145, 1114121, 0, 262145, 1114122, 0, 262145, 1114123, 0, 262145, 1114124, 0, 262145, 1114125, 0, 262145, 1114126, 0, 262145, 1114127, 0, 262145, 1114128, 0, 262145, 1114129, 0, 262145, 1114130, 0, 262145, 1114131, 0, 262145, 1114132, 0, 262145, 1114133, 0, 262145, 1114134, 0, 262145, 1114135, 0, 262145, 1114136, 0, 262145, 1114137, 0, 262145, 1114138, 0, 262145, 1114139, 0, 262145, 1114140, 0, 262145, 1114141, 0, 262145, 1114142, 0, 262145, 1114143, 0, 262145, 1114144, 0, 262145, 1114145, 0, 262146, 1245183, 0, 262144, 1179648, 0, 262145, 1179649, 0, 262145, 1179650, 0, 262145, 1179651, 0, 262145, 1179652, 0, 262145, 1179653, 0, 262145, 1179654, 0, 262145, 1179655, 0, 262145, 1179656, 0, 262145, 1179657, 0, 262145, 1179658, 0, 262145, 1179659, 0, 262145, 1179660, 0, 262145, 1179661, 0, 262145, 1179662, 0, 262145, 1179663, 0, 262145, 1179664, 0, 262145, 1179665, 0, 262145, 1179666, 0, 262145, 1179667, 0, 262145, 1179668, 0, 262145, 1179669, 0, 262145, 1179670, 0, 262145, 1179671, 0, 262145, 1179672, 0, 262145, 1179673, 0, 262145, 1179674, 0, 262145, 1179675, 0, 262145, 1179676, 0, 262145, 1179677, 0, 262145, 1179678, 0, 262145, 1179679, 0, 262145, 1179680, 0, 262145, 1179681, 0, 262146, 1310719, 0, 327680, 1245184, 0, 327681, 1245185, 0, 327681, 1245186, 0, 327681, 1245187, 0, 327681, 1245188, 0, 327681, 1245189, 0, 327681, 1245190, 0, 327681, 1245191, 0, 327681, 1245192, 0, 327681, 1245193, 0, 327681, 1245194, 0, 327681, 1245195, 0, 327681, 1245196, 0, 327681, 1245197, 0, 327681, 1245198, 0, 327681, 1245199, 0, 327681, 1245200, 0, 327681, 1245201, 0, 327681, 1245202, 0, 327681, 1245203, 0, 327681, 1245204, 0, 327681, 1245205, 0, 327681, 1245206, 0, 327681, 1245207, 0, 327681, 1245208, 0, 327681, 1245209, 0, 327681, 1245210, 0, 327681, 1245211, 0, 327681, 1245212, 0, 327681, 1245213, 0, 327681, 1245214, 0, 327681, 1245215, 0, 327681, 1245216, 0, 327681, 1245217, 0, 327682 )

[node name="Chain" parent="." index="5"]
blue_pos = Vector2( 160, 192 )

[node name="Camera2D" parent="." index="6"]
limit_left = 0
limit_top = -128
limit_right = 512
limit_bottom = 288

[node name="FinishLine" parent="." index="8"]
position = Vector2( 272, -16 )

[node name="Hole" parent="FinishLine" index="1"]
material = SubResource( 6 )

[node name="Orb" parent="." index="9" instance=ExtResource( 4 )]
position = Vector2( 272, 184 )

[node name="Orb2" parent="." index="10" instance=ExtResource( 4 )]
position = Vector2( 272, 120 )

[node name="Orb3" parent="." index="11" instance=ExtResource( 4 )]
position = Vector2( 272, 64 )

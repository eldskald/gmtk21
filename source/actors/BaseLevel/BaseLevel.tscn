[gd_scene load_steps=18 format=2]

[ext_resource path="res://assets/textures/block-par-0.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/block-par-1.png" type="Texture" id=2]
[ext_resource path="res://actors/camera/background.tscn" type="PackedScene" id=3]
[ext_resource path="res://actors/player/chain/Chain.tscn" type="PackedScene" id=4]
[ext_resource path="res://actors/tilemaps/solid-blocks.tscn" type="PackedScene" id=5]
[ext_resource path="res://actors/BaseLevel/Camera2D.gd" type="Script" id=6]
[ext_resource path="res://actors/tilemaps/one-way-platform.tscn" type="PackedScene" id=7]
[ext_resource path="res://actors/tilemaps/blue-walls.tscn" type="PackedScene" id=8]
[ext_resource path="res://actors/tilemaps/orange-walls.tscn" type="PackedScene" id=9]
[ext_resource path="res://actors/hole/hole.tscn" type="PackedScene" id=10]
[ext_resource path="res://actors/BaseLevel/BaseLevel.gd" type="Script" id=11]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 camera_position = vec2(0.0);
uniform vec2 par1_vel = vec2(25.0, 2.0);
uniform vec2 par2_vel = vec2(10.0, -5.0);
uniform vec4 bg_color: hint_color;
uniform vec4 bd1_color: hint_color;
uniform vec4 bd2_color: hint_color;
uniform sampler2D parallax_texture_1: hint_black;
uniform sampler2D parallax_texture_2: hint_black;
uniform sampler2D border_noise_texture: hint_black;

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 pix_coord = floor(SCREEN_UV / SCREEN_PIXEL_SIZE);
	float noise = texture(border_noise_texture, SCREEN_UV + TIME * vec2(0.02)).x;
	
	if (length(color - bd1_color) < 0.001) {
		color = noise >= 0.51 ? vec4(0.0) : bd1_color;
	}
	
	if (length(color - bd2_color) < 0.001) {
		color = noise >= 0.49 ? bd1_color : bg_color;
	}
	
	if (length(color - bg_color) < 0.001) {
		color = texture(parallax_texture_1, mod(pix_coord + par1_vel * TIME + camera_position / 2.0, vec2(32.0)) / vec2(32.0));
		if (color.a == 0.0) {
			color = texture(parallax_texture_2, mod(pix_coord + par2_vel * TIME, vec2(32.0)) / vec2(32.0));
		}
		if (color.a == 0.0) {
			color = bg_color;
		}

	}
	
	COLOR = color;
}
"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/camera_position = Vector2( 0, 0 )
shader_param/par1_vel = Vector2( 25, 2 )
shader_param/par2_vel = Vector2( 10, -5 )
shader_param/bg_color = Color( 0.266667, 0.0392157, 0.403922, 1 )
shader_param/bd1_color = Color( 0.839216, 0.878431, 0.941176, 1 )
shader_param/bd2_color = Color( 0.705882, 0.682353, 0.909804, 1 )
shader_param/parallax_texture_1 = ExtResource( 1 )
shader_param/parallax_texture_2 = ExtResource( 2 )
shader_param/border_noise_texture = SubResource( 3 )

[sub_resource type="Animation" id=5]
resource_name = "shake"
length = 0.6
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 32, 0 ), Vector2( -16, 0 ), Vector2( 0, 0 ) ]
}

[sub_resource type="CircleShape2D" id=6]
radius = 30.5164

[node name="BaseLevel" type="Node2D"]
script = ExtResource( 11 )

[node name="BlueWalls" parent="." groups=[
"ground",
] instance=ExtResource( 8 )]
collision_layer = 0
collision_mask = 2

[node name="Platform" parent="." groups=[
"ground",
] instance=ExtResource( 7 )]
collision_layer = 0
collision_mask = 3
tile_data = PoolIntArray( 17, 0, 0, 18, 0, 1, 19, 0, 1, 20, 0, 1, 21, 0, 1, 22, 0, 2 )

[node name="Sprite" parent="." instance=ExtResource( 3 )]
scale = Vector2( 1.05, 1.05 )

[node name="Chain" parent="." instance=ExtResource( 4 )]
chain_size = 10

[node name="SolidBlock" parent="." groups=[
"ground",
] instance=ExtResource( 5 )]
material = SubResource( 4 )
collision_layer = 0
collision_mask = 7
tile_data = PoolIntArray( -458768, 0, 1, -393232, 0, 65539, -327696, 0, 65539, -262160, 0, 65539, -196624, 0, 65539, -131088, 0, 65539, -65552, 0, 65539, -16, 0, 65539, 65520, 0, 65539, 131056, 0, 65539, 196592, 0, 65539, 262128, 0, 65539, 327664, 0, 65539, 262159, 0, 1, 393200, 0, 65539, 327694, 0, 196608, 327695, 0, 458755, 327705, 0, 196608, 327706, 0, 196609, 327707, 0, 196609, 327708, 0, 196609, 327709, 0, 196609, 327710, 0, 196609, 327711, 0, 196610, 458736, 0, 65539, 458747, 0, 196608, 458748, 0, 196609, 458749, 0, 196609, 458750, 0, 196609, 458751, 0, 196609, 393216, 0, 196609, 393217, 0, 196609, 393218, 0, 196609, 393219, 0, 196609, 393220, 0, 196609, 393221, 0, 196609, 393222, 0, 196609, 393223, 0, 196609, 393224, 0, 196609, 393225, 0, 196609, 393226, 0, 196609, 393227, 0, 196609, 393228, 0, 196609, 393229, 0, 196609, 393230, 0, 720899, 393231, 0, 262146, 393241, 0, 262144, 393242, 0, 262145, 393243, 0, 262145, 393244, 0, 262145, 393245, 0, 262145, 393246, 0, 262145, 393247, 0, 262146, 524272, 0, 65539, 524282, 0, 196608, 524283, 0, 720899, 524284, 0, 262145, 524285, 0, 262145, 524286, 0, 262145, 524287, 0, 262145, 458752, 0, 262145, 458753, 0, 262145, 458754, 0, 262145, 458755, 0, 262145, 458756, 0, 262145, 458757, 0, 262145, 458758, 0, 262145, 458759, 0, 262145, 458760, 0, 262145, 458761, 0, 262145, 458762, 0, 262145, 458763, 0, 262145, 458764, 0, 262145, 458765, 0, 262145, 458766, 0, 262145, 458767, 0, 262146, 458777, 0, 262144, 458778, 0, 262145, 458779, 0, 262145, 458780, 0, 262145, 458781, 0, 262145, 458782, 0, 262145, 458783, 0, 262146, 589808, 0, 131074, 589809, 0, 131072, 589810, 0, 131072, 589811, 0, 131072, 589812, 0, 131072, 589813, 0, 131072, 589814, 0, 131072, 589815, 0, 131072, 589816, 0, 131072, 589817, 0, 131072, 589818, 0, 458753, 589819, 0, 327681, 589820, 0, 327681, 589821, 0, 327681, 589822, 0, 327681, 589823, 0, 327681, 524288, 0, 327681, 524289, 0, 327681, 524290, 0, 327681, 524291, 0, 327681, 524292, 0, 327681, 524293, 0, 327681, 524294, 0, 327681, 524295, 0, 327681, 524296, 0, 327681, 524297, 0, 327681, 524298, 0, 327681, 524299, 0, 327681, 524300, 0, 327681, 524301, 0, 327681, 524302, 0, 327681, 524303, 0, 327682, 524313, 0, 327680, 524314, 0, 327681, 524315, 0, 327681, 524316, 0, 327681, 524317, 0, 327681, 524318, 0, 327681, 524319, 0, 327682 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true
smoothing_enabled = true
smoothing_speed = 10.0
script = ExtResource( 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Camera2D"]
anims/shake = SubResource( 5 )

[node name="Orbs" type="Node2D" parent="."]

[node name="OrangeWalls" parent="." groups=[
"ground",
] instance=ExtResource( 9 )]
collision_layer = 0
tile_data = PoolIntArray( 11, 0, 65536, 65547, 0, 65537, 131083, 0, 65537, 196619, 0, 65537, 262155, 0, 65537, 327691, 0, 65537, 393227, 0, 65538 )

[node name="FinishLine" type="Area2D" parent="."]
position = Vector2( 246.5, 25 )
collision_layer = 0
collision_mask = 3

[node name="CollisionShape2D" type="CollisionShape2D" parent="FinishLine"]
shape = SubResource( 6 )

[node name="Hole" parent="FinishLine" instance=ExtResource( 10 )]

[connection signal="body_entered" from="FinishLine" to="." method="_on_FinishLine_body_entered"]
